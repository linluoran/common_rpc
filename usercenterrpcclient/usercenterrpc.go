// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: usercenter_rpc.proto

package usercenterrpcclient

import (
	"context"
	"github.com/linluoran/common_rpc/usercenter_rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetUserInfoReq  = usercenter_rpc.GetUserInfoReq
	GetUserInfoResp = usercenter_rpc.GetUserInfoResp

	UsercenterRpc interface {
		GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error)
	}

	defaultUsercenterRpc struct {
		cli zrpc.Client
	}
)

func NewUsercenterRpc(cli zrpc.Client) UsercenterRpc {
	return &defaultUsercenterRpc{
		cli: cli,
	}
}

func (m *defaultUsercenterRpc) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoResp, error) {
	client := usercenter_rpc.NewUsercenterRpcClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}
